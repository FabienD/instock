# Services
services:

  reverse-proxy:
    container_name: traefik
    image: traefik:2.7
    command:
      --api.dashboard=true
      --providers.docker=true
      --providers.docker.useBindPortIP=true
      --providers.docker.exposedbydefault=false
      --entrypoints.websecure.address=:443
      --entrypoints.web.address=:80
      --certificatesresolvers.letsencryptresolver.acme.httpchallenge=true
      --certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web
      # Use a valid email
      --certificatesresolvers.letsencryptresolver.acme.email=user@example.com
      --certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.js
      --entrypoints.web.http.redirections.entryPoint.to=websecure
      --entrypoints.web.http.redirections.entryPoint.scheme=https
      #--pilot.token="xxxxxxxxxxx"
    restart: always
    labels:
      - "traefik.enable=true"
      # Chosse a domain for traefik dashboard
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.domain.com`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.dashboard.middlewares=traefik-auth"
      # Change user password using htpasswd
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:xxxxxxxxx"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik-certificates:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro


   # API
   api:
     container_name: instock-api
     # Use api Dockerfile to build image
     image: instock-api
     build: ./api
     # Run as "UID:GUID"
     # user: "1000:1000"
     #restart: always
     labels:
       - "traefik.enable=true"
       # Chosse a domain for instock api
       - "traefik.http.routers.instock-api.rule=Host(`api.instock.domain.com`)"
       - "traefik.http.routers.instock-api.entrypoints=web"
       - "traefik.http.services.instock-api.loadbalancer.server.port=8088"
       - "traefik.http.routers.instock-api.tls.certresolver=letsencryptresolver"
     ports:
       - 8088
     env_file: .env
     environment:
       - API_HOST=0.0.0.0
       - SYSLOG_DSN=xxxxxx:514
       - DATABASE_URL=postgres://xxxx:yyyyy@zzzzzz:5432/instock

  # ReactJS App
  front:
    container_name: front
    build: ./front
    restart: always
    labels:
      - "traefik.enable=true"
      # Chosse a domain for instock app
      - "traefik.http.routers.instock-app.rule=Host(`instock.domain.com`)"
      - "traefik.http.routers.instock-app.entrypoints=websecure"
      - "traefik.http.routers.instock-app.tls.certresolver=letsencryptresolver"
    ports:
      - 80


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10
    environment:
      RABBITMQ_DEFAULT_USER: instock
      # Choose a password.
      RABBITMQ_DEFAULT_PASS: xxxxxxxxx
      RABBITMQ_DEFAULT_VHOST: instock
    ports:
      - 5672:5672
      - 5671:5671
    restart: always


  db:
    image: timescale/timescaledb:latest-pg14
    container_name: instock.db
    env_file: .env  
    ports: 
      - 5434:5432

# Volumes
volumes:
  traefik-certificates:

# Network
networks:
  default:
    name: instock
    external: true